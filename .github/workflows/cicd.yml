name: CICD
on:
    push:
        branches:
            - master
env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY}}
  LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
  MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
  CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
  ANON_KEY: ${{ secrets.ANON_KEY }}
  SUPABASE_PUBLIC_KEY: ${{ secrets.SUPABASE_PUBLIC_KEY }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  UPSTASH_REDIS_HOST: ${{ secrets.UPSTASH_REDIS_HOST }}
  UPSTASH_REDIS_PASSWORD: ${{ secrets.UPSTASH_REDIS_PASSWORD }}
  UPSTASH_REDIS_PORT: ${{ secrets.UPSTASH_REDIS_PORT }}
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Source
              uses: actions/checkout@v3
            - name: Login to Docker Hub
              run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            - name: Build Docker Image
              run: |
                  docker build \
                  --build-arg OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
                  --build-arg GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }} \
                  --build-arg LANGCHAIN_API_KEY=${{ secrets.LANGCHAIN_API_KEY }} \
                  --build-arg MISTRAL_API_KEY=${{ secrets.MISTRAL_API_KEY }} \
                  --build-arg REDIS_HOST=${{ secrets.REDIS_HOST }} \
                  --build-arg CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }} \
                  --build-arg CELERY_RESULT_BACKEND=${{ secrets.CELERY_RESULT_BACKEND }} \
                  --build-arg SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
                  --build-arg SUPABASE_JWT_SECRET=${{ secrets.SUPABASE_JWT_SECRET }} \
                  --build-arg ANON_KEY=${{ secrets.ANON_KEY }} \
                  --build-arg SUPABASE_PUBLIC_KEY=${{ secrets.SUPABASE_PUBLIC_KEY }} \
                  --build-arg POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
                  --build-arg POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
                  --build-arg POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
                  --build-arg POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
                  --build-arg POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
                  --build-arg UPSTASH_REDIS_HOST=${{ secrets.UPSTASH_REDIS_HOST }} \
                  --build-arg UPSTASH_REDIS_PASSWORD=${{ secrets.UPSTASH_REDIS_PASSWORD }} \
                  --build-arg UPSTASH_REDIS_PORT=${{ secrets.UPSTASH_REDIS_PORT }} \
                  -t henryhoangduong/bda-backend:latest \
                  --no-cache
                  ./backend
            - name: Publish image to docker hub
              run: docker push  henryhoangduong/bda-backend:latest