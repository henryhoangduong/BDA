FROM python:3.12-slim-bullseye

# Install uv.
COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/uv

# Copy the application into the container.
COPY . /app

# Install the application dependencies.
WORKDIR /app
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
      build-essential \
      libpq-dev \
      libgl1-mesa-glx \
      libglib2.0-0 \
 && rm -rf /var/lib/apt/lists/*
RUN uv sync --frozen --no-cache

ENV OPENAI_API_KEY $OPENAI_API_KEY
ENV LANGCHAIN_API_KEY $LANGCHAIN_API_KEY
ENV MISTRAL_API_KEY $MISTRAL_API_KEY
ENV REDIS_HOST $REDIS_HOST
ENV CELERY_BROKER_URL $CELERY_BROKER_URL
ENV CELERY_RESULT_BACKEND $CELERY_RESULT_BACKEND
ENV SUPABASE_URL $SUPABASE_URL
ENV SUPABASE_JWT_SECRET $SUPABASE_JWT_SECRET
ENV ANON_KEY $ANON_KEY
ENV SUPABASE_PUBLIC_KEY $SUPABASE_PUBLIC_KEY
ENV POSTGRES_HOST $POSTGRES_HOST
ENV POSTGRES_PORT $POSTGRES_PORT
ENV POSTGRES_USER $POSTGRES_USER
ENV POSTGRES_PASSWORD $POSTGRES_PASSWORD
ENV POSTGRES_DB $POSTGRES_DB

COPY entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

EXPOSE 8080
ENTRYPOINT ["/app/entrypoint.sh"]